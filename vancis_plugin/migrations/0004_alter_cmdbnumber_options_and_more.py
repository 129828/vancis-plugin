# Generated by Django 4.1.9 on 2023-05-15 10:45

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json


class Migration(migrations.Migration):

    dependencies = [
        ('dcim', '0171_cabletermination_change_logging'),
        ('virtualization', '0034_standardize_description_comments'),
        ('extras', '0092_delete_jobresult'),
        ('vancis_plugin', '0003_alter_cmdbnumber_cmdb_number'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='cmdbnumber',
            options={'ordering': ('cmdb_number',)},
        ),
        migrations.AlterField(
            model_name='virtualmachinedata',
            name='cmdb_number',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vmdata', to='vancis_plugin.cmdbnumber'),
        ),
        migrations.AlterField(
            model_name='virtualmachinedata',
            name='virtual_machine',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vmdata', to='virtualization.virtualmachine'),
        ),
        migrations.CreateModel(
            name='NetworkDeviceData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('operating_system', models.CharField(max_length=50)),
                ('cmdb_number', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='NetworkDeviceData', to='vancis_plugin.cmdbnumber')),
                ('network_device', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='NetworkDeviceData', to='dcim.device')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('cmdb_number',),
            },
        ),
    ]
