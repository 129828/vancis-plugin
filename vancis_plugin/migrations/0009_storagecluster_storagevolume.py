# Generated by Django 4.1.9 on 2023-07-05 12:14

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json


class Migration(migrations.Migration):

    dependencies = [
        ('extras', '0092_delete_jobresult'),
        ('vancis_plugin', '0008_softwarepackage_created_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='StorageCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('name', models.CharField(max_length=100)),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='StorageVolume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('volumeID', models.IntegerField()),
                ('volName', models.CharField(max_length=100)),
                ('totalSize', models.BigIntegerField()),
                ('minIOPS', models.IntegerField()),
                ('scsiNAADeviceID', models.CharField(max_length=100)),
                ('storageCluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vancis_plugin.storagecluster')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('volName',),
            },
        ),
    ]
